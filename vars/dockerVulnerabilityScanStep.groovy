def call() {
    ansiColor('xterm') {
        script {
            sh'''
            IMAGE_TAG=`cat ~/IMAGE_TAG.txt`

            trivy image -s HIGH,CRITICAL -q \$REGISTRY/\$REPOSITORY:\$IMAGE_TAG

            echo "Docker image scan is successful" > $WORKSPACE/image_vulnerability_scan_result.txt
            ls $WORKSPACE
            pwd

            set +x

            wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl

            trivy image -s HIGH,CRITICAL -q --format json \$REGISTRY/\$REPOSITORY:\$IMAGE_TAG > report.json
            


            critical_count=$(jq -r '.Results[].Vulnerabilities | map(select(.Severity == "CRITICAL")) | length' "report.json")
            high_count=$(jq -r '.Results[].Vulnerabilities | map(select(.Severity == "HIGH")) | length' "report.json")
            
            # Print the counts
            echo "CRITICAL count: $critical_count"
            echo "HIGH count: $high_count"

            # Create a JSON file with the desired format
            echo "{\"high_count\": \"$high_count\", \"critical_count\": \"$critical_count\"}" > image_vulnerability_count_report.json

            cat image_vulnerability_count_report.json

            echo "Docker image scan is successful" > $WORKSPACE/image_vulnerability_scan_result.txt

            echo "----------------------------------------------------------------------"

            trivy image -s HIGH,CRITICAL -q --format template --template "@html.tpl" \$REGISTRY/\$REPOSITORY:\$IMAGE_TAG > report.html

            # Check if the branch is "main" before sending to S3
            if [ "$BRANCH_NAME" = "main" ]; then
                # Send report.html and image_vulnerability_count_report.json to S3 
                aws s3 cp report.html s3://scansite.allen-demo.in/${serviceName}/container-image-scan/report.html
                aws s3 cp image_vulnerability_count_report.json s3://scansite.allen-demo.in/${serviceName}/container-image-scan/image_vulnerability_count_report.json
            else
                echo "Branch is not main. Skipping S3 upload."
            fi

            set -x
            '''
        }
    }
}